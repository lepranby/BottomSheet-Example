//  ViewController.swift
//  BottomSheet_Example
//
//  Created by Aleksej Shapran on 28.03.23

import UIKit

class ViewController: UIViewController {
    
    lazy var titleLabel: UILabel = {
        
        let label = UILabel()
        label.text = "Wir lernen Deutsch! üëÄ"
        label.font = .systemFont(ofSize: 41, weight: .bold)
        label.numberOfLines = 2
        
        return label
    }()
    
    lazy var textView: UITextView = {
        
        let textView = UITextView(frame: .zero)
        textView.font = .systemFont(ofSize: 18, weight: .light)
        textView.isEditable = false
        textView.showsVerticalScrollIndicator = false
        textView.text = "–ù–µ–º–µÃÅ—Ü–∫–∏–π —è–∑—ãÃÅ–∫ ‚Äî –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —è–∑—ã–∫ –Ω–µ–º—Ü–µ–≤, –∞–≤—Å—Ç—Ä–∏–π—Ü–µ–≤, –ª–∏—Ö—Ç–µ–Ω—à—Ç–µ–π–Ω—Ü–µ–≤, –≥–µ—Ä–º–∞–Ω–æ—à–≤–µ–π—Ü–∞—Ä—Ü–µ–≤ –∏ –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏—Ö –Ω–µ–º—Ü–µ–≤; –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —è–∑—ã–∫ –ì–µ—Ä–º–∞–Ω–∏–∏, –ê–≤—Å—Ç—Ä–∏–∏, –õ–∏—Ö—Ç–µ–Ω—à—Ç–µ–π–Ω–∞, –æ–¥–∏–Ω –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –®–≤–µ–π—Ü–∞—Ä–∏–∏, –õ—é–∫—Å–µ–º–±—É—Ä–≥–∞ –∏ –ë–µ–ª—å–≥–∏–∏. –Ø–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ —Å–∞–º—ã—Ö —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –≤ –º–∏—Ä–µ –ø–æ—Å–ª–µ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ, –∞—Ä–∞–±—Å–∫–æ–≥–æ, —Ö–∏–Ω–¥–∏, –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ, –∏—Å–ø–∞–Ω—Å–∫–æ–≥–æ, –±–µ–Ω–≥–∞–ª—å—Å–∫–æ–≥–æ, –ø–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–æ–≥–æ, —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–æ–≥–æ, —Ä—É—Å—Å–∫–æ–≥–æ –∏ —è–ø–æ–Ω—Å–∫–æ–≥–æ. –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫ –∑–∞–Ω–∏–º–∞–µ—Ç —Å–µ–¥—å–º–æ–µ –º–µ—Å—Ç–æ (–ø–æ—Å–ª–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ, —Ä—É—Å—Å–∫–æ–≥–æ, –∏—Å–ø–∞–Ω—Å–∫–æ–≥–æ, —Ç—É—Ä–µ—Ü–∫–æ–≥–æ, –ø–µ—Ä—Å–∏–¥—Å–∫–æ–≥–æ, —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–æ–≥–æ) –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç–µ. –Ø–≤–ª—è–µ—Ç—Å—è —Å–∞–º—ã–º —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–º —è–∑—ã–∫–æ–º –≤ –ó–∞–ø–∞–¥–Ω–æ–π –ï–≤—Ä–æ–ø–µ (–±–æ–ª–µ–µ 90 –º–∏–ª–ª–∏–æ–Ω–æ–≤ –Ω–æ—Å–∏—Ç–µ–ª–µ–π). –¢–∞–∫–∂–µ –Ω–µ–º–µ—Ü–∫–∏–π ‚Äî –æ–¥–∏–Ω –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –∏ —Ä–∞–±–æ—á–∏—Ö —è–∑—ã–∫–æ–≤ –ï–≤—Ä–æ–ø–µ–π—Å–∫–æ–≥–æ —Å–æ—é–∑–∞ –∏ —Ä—è–¥–∞ –¥—Ä—É–≥–∏—Ö –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π."
        
        return textView
    }()
    
    lazy var infoButton: UIButton = {
        
        let button = UIButton()
        button.setTitle("–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ", for: .normal)
        button.setTitleColor(.systemBlue, for: .normal)
        button.setTitleShadowColor(.white, for: .normal)
        button.backgroundColor = .white
        button.layer.cornerRadius = 15
        button.layer.borderWidth = 1
        button.layer.borderColor = CGColor(red: 0/255, green: 80/255, blue: 200/255, alpha: 1)
        button.clipsToBounds = true
        
        return button
    }()
    
    lazy var startButton: UIButton = {
        
        let button = UIButton()
        button.setTitle("–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ", for: .normal)
        button.setTitleColor(.white, for: .normal)
        button.backgroundColor = view.tintColor
        button.layer.cornerRadius = 15
        button.clipsToBounds = true
       
        return button
    }()
    
    lazy var containerStackView: UIStackView = {
        
        let spacer = UIView()
        let stackView = UIStackView(arrangedSubviews: [titleLabel, textView, spacer, startButton, infoButton])
        stackView.axis = .vertical
        stackView.spacing = 15
        
        return stackView
    }()
    
    override func viewDidLoad() {
        
        super.viewDidLoad()
        
        configureView()
        configureConstraints()
        
        // MARK: Actions
        
        infoButton.addTarget(self, action: #selector(presentModalController), for: .touchUpInside)
        startButton.addTarget(self, action: #selector(startMessage), for: .touchUpInside)
    }
    
    @objc private func startMessage () {
        
        let message = UIAlertController(title: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", message: "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ –≤ –≤–µ—Ç–∫–µ –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫?", preferredStyle: .actionSheet)
        message.addAction(UIAlertAction(title: NSLocalizedString("–î–∞", comment: "Yes"), style: .default, handler: { _ in NSLog("YES button pressed.")}))
        message.addAction(UIAlertAction(title: NSLocalizedString("–ù–µ—Ç", comment: "No"), style: .destructive, handler: { _ in NSLog("NO button pressed.")}))
            self.present(message, animated: true, completion: nil)
        }
    
    func configureView() {
        
        view.backgroundColor = .systemBackground
        
    }
    
    func configureConstraints() {
        
        view.addSubview(containerStackView)
        containerStackView.translatesAutoresizingMaskIntoConstraints = false
        
        let safeArea = view.safeAreaLayoutGuide
        NSLayoutConstraint.activate([
            containerStackView.topAnchor.constraint(equalTo: safeArea.topAnchor, constant: 0),
            containerStackView.bottomAnchor.constraint(equalTo: safeArea.bottomAnchor, constant: -19),
            containerStackView.leadingAnchor.constraint(equalTo: safeArea.leadingAnchor, constant: 19),
            containerStackView.trailingAnchor.constraint(equalTo: safeArea.trailingAnchor, constant: -19),
            infoButton.heightAnchor.constraint(equalToConstant: 55),
            startButton.heightAnchor.constraint(equalToConstant: 55)
        ])
    }
    
    @objc func presentModalController() {
        
        let vc = CustomModalViewController()
        vc.modalPresentationStyle = .overCurrentContext
        self.present(vc, animated: false)
        
    }
}
